URL: https://gstreamer.freedesktop.org/documentation/gstreamer/gstplugin.html?gi-language=c
Title: GstPlugin
Content:
GStreamer is extensible, so <a href="gstreamer/gstelement.html#GstElement" data-gi-href-javascript="gstreamer/gstelement.html#GstElement" data-gi-href-python="gstreamer/gstelement.html#GstElement" data-gi-title-python="Gst.Element" data-gi-title-javascript="Gst.Element">GstElement</a> instances can be loaded at runtime.
A plugin system can provide one or more of the basic GStreamer
<a data-gi-title-python="Gst.PluginFeature" data-gi-href-javascript="gstreamer/gstpluginfeature.html#GstPluginFeature" data-gi-title-javascript="Gst.PluginFeature" data-gi-href-python="gstreamer/gstpluginfeature.html#GstPluginFeature" href="gstreamer/gstpluginfeature.html#GstPluginFeature">GstPluginFeature</a> subclasses.
A plugin should export a symbol <code>gst_plugin_desc</code> that is a
struct of type <a href="gstreamer/gstplugin.html#GstPluginDesc" data-gi-title-python="Gst.PluginDesc" data-gi-href-python="gstreamer/gstplugin.html#GstPluginDesc" data-gi-title-javascript="Gst.PluginDesc" data-gi-href-javascript="gstreamer/gstplugin.html#GstPluginDesc">GstPluginDesc</a>.
the plugin loader will check the version of the core library the plugin was
linked against and will create a new <a data-gi-title-javascript="Gst.Plugin" data-gi-href-javascript="gstreamer/gstplugin.html#GstPlugin" href="gstreamer/gstplugin.html#GstPlugin" data-gi-title-python="Gst.Plugin" data-gi-href-python="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>. It will then call the
<a href="gstreamer/gstplugin.html#GstPluginInitFunc" data-gi-href-javascript="gstreamer/gstplugin.html#GstPluginInitFunc" data-gi-title-javascript="Gst.PluginInitFunc" data-gi-href-python="gstreamer/gstplugin.html#GstPluginInitFunc" data-gi-title-python="Gst.PluginInitFunc">GstPluginInitFunc</a> function that was provided in the
<code>gst_plugin_desc</code>.
Once you have a handle to a <a data-gi-href-javascript="gstreamer/gstplugin.html#GstPlugin" href="gstreamer/gstplugin.html#GstPlugin" data-gi-title-javascript="Gst.Plugin" data-gi-href-python="gstreamer/gstplugin.html#GstPlugin" data-gi-title-python="Gst.Plugin">GstPlugin</a> (e.g. from the <a data-gi-href-javascript="gstreamer/gstregistry.html#GstRegistry" href="gstreamer/gstregistry.html#GstRegistry" data-gi-href-python="gstreamer/gstregistry.html#GstRegistry" data-gi-title-python="Gst.Registry" data-gi-title-javascript="Gst.Registry">GstRegistry</a>), you
can add any object that subclasses <a data-gi-title-javascript="Gst.PluginFeature" href="gstreamer/gstpluginfeature.html#GstPluginFeature" data-gi-href-python="gstreamer/gstpluginfeature.html#GstPluginFeature" data-gi-title-python="Gst.PluginFeature" data-gi-href-javascript="gstreamer/gstpluginfeature.html#GstPluginFeature">GstPluginFeature</a>.
Usually plugins are always automatically loaded so you don't need to call
<a data-gi-title-python="Gst.Plugin.load" href="gstreamer/gstplugin.html#gst_plugin_load" data-gi-href-python="gstreamer/gstplugin.html#gst_plugin_load" data-gi-title-javascript="Gst.Plugin.prototype.load" data-gi-href-javascript="gstreamer/gstplugin.html#gst_plugin_load">gst_plugin_load</a> explicitly to bring it into memory. There are options to
statically link plugins to an app or even use GStreamer without a plugin
repository in which case <a href="gstreamer/gstplugin.html#gst_plugin_load" data-gi-title-javascript="Gst.Plugin.prototype.load" data-gi-href-javascript="gstreamer/gstplugin.html#gst_plugin_load" data-gi-href-python="gstreamer/gstplugin.html#gst_plugin_load" data-gi-title-python="Gst.Plugin.load">gst_plugin_load</a> can be needed to bring the plugin
into memory.
The opaque plugin object
The opaque plugin object
The opaque plugin object
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>-terminated array of environment variables affecting the
feature set of the plugin (e.g. an environment variable containing
paths where to look for additional modules/plugins of a library),
or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins".
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>-terminated array of directories/paths where dependent files
may be, or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>.
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>-terminated array of file names (or file name suffixes,
depending on <em>flags</em>) to be used in combination with the paths from
<em>paths</em> and/or the paths extracted from the environment variables in
<em>env_vars</em>, or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>.
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">GST_PLUGIN_DEPENDENCY_FLAG_NONE</a>
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>-terminated array of environment variables affecting the
feature set of the plugin (e.g. an environment variable containing
paths where to look for additional modules/plugins of a library),
or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins".
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>-terminated array of directories/paths where dependent files
may be, or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>.
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>-terminated array of file names (or file name suffixes,
depending on <em>flags</em>) to be used in combination with the paths from
<em>paths</em> and/or the paths extracted from the environment variables in
<em>env_vars</em>, or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>.
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">Gst.PluginDependencyFlags.NONE</a>
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
<a href="https://docs.python.org/3/library/constants.html#None">None</a>-terminated array of environment variables affecting the
feature set of the plugin (e.g. an environment variable containing
paths where to look for additional modules/plugins of a library),
or <a href="https://docs.python.org/3/library/constants.html#None">None</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins".
<a href="https://docs.python.org/3/library/constants.html#None">None</a>-terminated array of directories/paths where dependent files
may be, or <a href="https://docs.python.org/3/library/constants.html#None">None</a>.
<a href="https://docs.python.org/3/library/constants.html#None">None</a>-terminated array of file names (or file name suffixes,
depending on <em>flags</em>) to be used in combination with the paths from
<em>paths</em> and/or the paths extracted from the environment variables in
<em>env_vars</em>, or <a href="https://docs.python.org/3/library/constants.html#None">None</a>.
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">Gst.PluginDependencyFlags.NONE</a>
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
Convenience wrapper function for <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">gst_plugin_add_dependency</a> which
takes simple strings as arguments instead of string arrays, with multiple
arguments separated by predefined delimiters (see above).
<b>Parameters:</b>
the <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
one or more environment variables (separated by ':', ';' or ','),
or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins:MYSTUFF_PLUGINS_PATH"
one ore more directory paths (separated by ':' or ';' or ','),
or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>. Example: "/usr/lib/mystuff/plugins"
one or more file names or file name suffixes (separated by commas),
or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">GST_PLUGIN_DEPENDENCY_FLAG_NONE</a>
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
Convenience wrapper function for <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">Gst.Plugin.prototype.add_dependency</a> which
takes simple strings as arguments instead of string arrays, with multiple
arguments separated by predefined delimiters (see above).
<b>Parameters:</b>
the <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
one or more environment variables (separated by ':', ';' or ','),
or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins:MYSTUFF_PLUGINS_PATH"
one ore more directory paths (separated by ':' or ';' or ','),
or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>. Example: "/usr/lib/mystuff/plugins"
one or more file names or file name suffixes (separated by commas),
or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">Gst.PluginDependencyFlags.NONE</a>
Make GStreamer aware of external dependencies which affect the feature
set of this plugin (ie. the elements or typefinders associated with it).
GStreamer will re-inspect plugins with external dependencies whenever any
of the external dependencies change. This is useful for plugins which wrap
other plugin systems, e.g. a plugin which wraps a plugin-based visualisation
library and makes visualisations available as GStreamer elements, or a
codec loader which exposes elements and/or caps dependent on what external
codec libraries are currently installed.
Convenience wrapper function for <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">Gst.Plugin.add_dependency</a> which
takes simple strings as arguments instead of string arrays, with multiple
arguments separated by predefined delimiters (see above).
<b>Parameters:</b>
the <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
one or more environment variables (separated by ':', ';' or ','),
or <a href="https://docs.python.org/3/library/constants.html#None">None</a>. Environment variable names may be followed by a path component
which will be added to the content of the environment variable, e.g.
"HOME/.mystuff/plugins:MYSTUFF_PLUGINS_PATH"
one ore more directory paths (separated by ':' or ';' or ','),
or <a href="https://docs.python.org/3/library/constants.html#None">None</a>. Example: "/usr/lib/mystuff/plugins"
one or more file names or file name suffixes (separated by commas),
or <a href="https://docs.python.org/3/library/constants.html#None">None</a>
optional flags, or <a href="gstreamer/gstplugin.html#GST_PLUGIN_DEPENDENCY_FLAG_NONE">Gst.PluginDependencyFlags.NONE</a>
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
the status error message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status error message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status error message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
the status info message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status info message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status info message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
the status warning message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status warning message

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
the status warning message

	<b>Since</b>			: 1.24
		
Gets the plugin specific data cache. If it is <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a> there is no cached data
stored. This is the case when the registry is getting rebuilt.
<b>Parameters:</b>
a plugin
The cached data as a
<a href="gstreamer/gststructure.html#GstStructure">GstStructure</a> or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>.
Gets the plugin specific data cache. If it is <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a> there is no cached data
stored. This is the case when the registry is getting rebuilt.
<b>Parameters:</b>
a plugin
The cached data as a
<a href="gstreamer/gststructure.html#GstStructure">Gst.Structure</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>.
Gets the plugin specific data cache. If it is <a href="https://docs.python.org/3/library/constants.html#None">None</a> there is no cached data
stored. This is the case when the registry is getting rebuilt.
<b>Parameters:</b>
a plugin
The cached data as a
<a href="gstreamer/gststructure.html#GstStructure">Gst.Structure</a> or <a href="https://docs.python.org/3/library/constants.html#None">None</a>.
Get the long descriptive name of the plugin
<b>Parameters:</b>
plugin to get long name of
the long name of the plugin
Get the long descriptive name of the plugin
<b>Parameters:</b>
plugin to get long name of
the long name of the plugin
Get the long descriptive name of the plugin
<b>Parameters:</b>
plugin to get long name of
the long name of the plugin
get the filename of the plugin
<b>Parameters:</b>
plugin to get the filename of
the filename of the plugin
get the filename of the plugin
<b>Parameters:</b>
plugin to get the filename of
the filename of the plugin
get the filename of the plugin
<b>Parameters:</b>
plugin to get the filename of
the filename of the plugin
get the license of the plugin
<b>Parameters:</b>
plugin to get the license of
the license of the plugin
get the license of the plugin
<b>Parameters:</b>
plugin to get the license of
the license of the plugin
get the license of the plugin
<b>Parameters:</b>
plugin to get the license of
the license of the plugin
Get the short name of the plugin
<b>Parameters:</b>
plugin to get the name of
the name of the plugin
Get the short name of the plugin
<b>Parameters:</b>
plugin to get the name of
the name of the plugin
Get the short name of the plugin
<b>Parameters:</b>
plugin to get the name of
the name of the plugin
get the URL where the plugin comes from
<b>Parameters:</b>
plugin to get the origin of
the origin of the plugin
get the URL where the plugin comes from
<b>Parameters:</b>
plugin to get the origin of
the origin of the plugin
get the URL where the plugin comes from
<b>Parameters:</b>
plugin to get the origin of
the origin of the plugin
get the package the plugin belongs to.
<b>Parameters:</b>
plugin to get the package of
the package of the plugin
get the package the plugin belongs to.
<b>Parameters:</b>
plugin to get the package of
the package of the plugin
get the package the plugin belongs to.
<b>Parameters:</b>
plugin to get the package of
the package of the plugin
Get the release date (and possibly time) in form of a string, if available.
For normal GStreamer plugin releases this will usually just be a date in
the form of "YYYY-MM-DD", while pre-releases and builds from git may contain
a time component after the date as well, in which case the string will be
formatted like "YYYY-MM-DDTHH:MMZ" (e.g. "2012-04-30T09:30Z").
There may be plugins that do not have a valid release date set on them.
<b>Parameters:</b>
plugin to get the release date of
the date string of the plugin, or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a> if not
available.
Get the release date (and possibly time) in form of a string, if available.
For normal GStreamer plugin releases this will usually just be a date in
the form of "YYYY-MM-DD", while pre-releases and builds from git may contain
a time component after the date as well, in which case the string will be
formatted like "YYYY-MM-DDTHH:MMZ" (e.g. "2012-04-30T09:30Z").
There may be plugins that do not have a valid release date set on them.
<b>Parameters:</b>
plugin to get the release date of
the date string of the plugin, or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a> if not
available.
Get the release date (and possibly time) in form of a string, if available.
For normal GStreamer plugin releases this will usually just be a date in
the form of "YYYY-MM-DD", while pre-releases and builds from git may contain
a time component after the date as well, in which case the string will be
formatted like "YYYY-MM-DDTHH:MMZ" (e.g. "2012-04-30T09:30Z").
There may be plugins that do not have a valid release date set on them.
<b>Parameters:</b>
plugin to get the release date of
the date string of the plugin, or <a href="https://docs.python.org/3/library/constants.html#None">None</a> if not
available.
get the source module the plugin belongs to.
<b>Parameters:</b>
plugin to get the source of
the source of the plugin
get the source module the plugin belongs to.
<b>Parameters:</b>
plugin to get the source of
the source of the plugin
get the source module the plugin belongs to.
<b>Parameters:</b>
plugin to get the source of
the source of the plugin
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
an array of plugin status error messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status error messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status error messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
an array of plugin status info messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status info messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status info messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
an array of plugin status warning messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status warning messages, or NULL

	<b>Since</b>			: 1.24
		
<b>Parameters:</b>
a <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
an array of plugin status warning messages, or NULL

	<b>Since</b>			: 1.24
		
get the version of the plugin
<b>Parameters:</b>
plugin to get the version of
the version of the plugin
get the version of the plugin
<b>Parameters:</b>
plugin to get the version of
the version of the plugin
get the version of the plugin
<b>Parameters:</b>
plugin to get the version of
the version of the plugin
queries if the plugin is loaded into memory
<b>Parameters:</b>
plugin to query
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> is loaded, <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</a> otherwise
queries if the plugin is loaded into memory
<b>Parameters:</b>
plugin to query
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> is loaded, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">false</a> otherwise
queries if the plugin is loaded into memory
<b>Parameters:</b>
plugin to query
<a href="https://docs.python.org/3/library/constants.html#True">True</a> is loaded, <a href="https://docs.python.org/3/library/constants.html#False">False</a> otherwise
Loads <em>plugin</em>. Note that the <em>return value</em> is the loaded plugin; <em>plugin</em> is
untouched. The normal use pattern of this function goes like this:
<b>Parameters:</b>
plugin to load
a reference to a loaded plugin, or
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a> on error.
Loads <em>plugin</em>. Note that the <em>return value</em> is the loaded plugin; <em>plugin</em> is
untouched. The normal use pattern of this function goes like this:
<b>Parameters:</b>
plugin to load
a reference to a loaded plugin, or
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a> on error.
Loads <em>plugin</em>. Note that the <em>return value</em> is the loaded plugin; <em>plugin</em> is
untouched. The normal use pattern of this function goes like this:
<b>Parameters:</b>
plugin to load
a reference to a loaded plugin, or
<a href="https://docs.python.org/3/library/constants.html#None">None</a> on error.
Adds plugin specific data to cache. Passes the ownership of the structure to
the <em>plugin</em>.
The cache is flushed every time the registry is rebuilt.
<b>Parameters:</b>
a plugin
a structure containing the data to cache
Adds plugin specific data to cache. Passes the ownership of the structure to
the <em>plugin</em>.
The cache is flushed every time the registry is rebuilt.
<b>Parameters:</b>
a plugin
a structure containing the data to cache
Adds plugin specific data to cache. Passes the ownership of the structure to
the <em>plugin</em>.
The cache is flushed every time the registry is rebuilt.
<b>Parameters:</b>
a plugin
a structure containing the data to cache
Unrefs each member of <em>list</em>, then frees the list.
<b>Parameters:</b>
list of <a href="gstreamer/gstplugin.html#GstPlugin">GstPlugin</a>
Unrefs each member of <em>list</em>, then frees the list.
<b>Parameters:</b>
list of <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
Unrefs each member of <em>list</em>, then frees the list.
<b>Parameters:</b>
list of <a href="gstreamer/gstplugin.html#GstPlugin">Gst.Plugin</a>
Load the named plugin. Refs the plugin.
<b>Parameters:</b>
name of plugin to load
a reference to a loaded plugin, or
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a> on error.
Load the named plugin. Refs the plugin.
<b>Parameters:</b>
name of plugin to load
a reference to a loaded plugin, or
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a> on error.
Load the named plugin. Refs the plugin.
<b>Parameters:</b>
name of plugin to load
a reference to a loaded plugin, or
<a href="https://docs.python.org/3/library/constants.html#None">None</a> on error.
Loads the given plugin and refs it.  Caller needs to unref after use.
<b>Parameters:</b>
the plugin filename to load
pointer to a <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>-valued GError
a reference to the existing loaded GstPlugin, a
reference to the newly-loaded GstPlugin, or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a> if an error occurred.
Loads the given plugin and refs it.  Caller needs to unref after use.
<b>Parameters:</b>
the plugin filename to load
a reference to the existing loaded GstPlugin, a
reference to the newly-loaded GstPlugin, or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a> if an error occurred.
Loads the given plugin and refs it.  Caller needs to unref after use.
<b>Parameters:</b>
the plugin filename to load
a reference to the existing loaded GstPlugin, a
reference to the newly-loaded GstPlugin, or <a href="https://docs.python.org/3/library/constants.html#None">None</a> if an error occurred.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">gst_init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">GstPluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> if the plugin was registered correctly, otherwise <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</a>.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">Gst.prototype.init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group (not introspectable)</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">Gst.PluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> if the plugin was registered correctly, otherwise <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">false</a>.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">Gst.init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group (not introspectable)</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">Gst.PluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
<a href="https://docs.python.org/3/library/constants.html#True">True</a> if the plugin was registered correctly, otherwise <a href="https://docs.python.org/3/library/constants.html#False">False</a>.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file) with a <a href="gstreamer/gstplugin.html#GstPluginInitFullFunc">GstPluginInitFullFunc</a>
which allows user data to be passed to the callback function (useful
for bindings).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">gst_init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function with user data
of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">GstPluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
gpointer to user data
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> if the plugin was registered correctly, otherwise <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</a>.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file) with a <a href="gstreamer/gstplugin.html#GstPluginInitFullFunc">Gst.PluginInitFullFunc</a>
which allows user data to be passed to the callback function (useful
for bindings).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">Gst.prototype.init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group (not introspectable)</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function with user data
of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">Gst.PluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
gpointer to user data
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> if the plugin was registered correctly, otherwise <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">false</a>.
Registers a static plugin, ie. a plugin which is private to an application
or library and contained within the application or library (as opposed to
being shipped as a separate module file) with a <a href="gstreamer/gstplugin.html#GstPluginInitFullFunc">Gst.PluginInitFullFunc</a>
which allows user data to be passed to the callback function (useful
for bindings).
You must make sure that GStreamer has been initialised (with <a href="gstreamer/gst.html#gst_init">Gst.init</a> or
via <a href="gstreamer/gst.html#gst_init_get_option_group">gst_init_get_option_group (not introspectable)</a>) before calling this function.
<b>Parameters:</b>
the major version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MAJOR here
the minor version number of the GStreamer core that the
plugin was compiled for, you can just use GST_VERSION_MINOR here
a unique name of the plugin (ideally prefixed with an application- or
library-specific namespace prefix in order to avoid name conflicts in
case a similar plugin with the same name ever gets added to GStreamer)
description of the plugin
pointer to the init function with user data
of this plugin.
version string of the plugin
effective license of plugin. Must be one of the approved licenses
(see <a href="gstreamer/gstplugin.html#GstPluginDesc">Gst.PluginDesc</a> above) or the plugin will not be registered.
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
gpointer to user data
<a href="https://docs.python.org/3/library/constants.html#True">True</a> if the plugin was registered correctly, otherwise <a href="https://docs.python.org/3/library/constants.html#False">False</a>.
A plugin should export a variable of this type called plugin_desc. The plugin
loader will use the data provided there to initialize the plugin.
The <em>licence</em> parameter must be one of: LGPL, GPL, QPL, GPL/QPL, MPL,
BSD, MIT/X11, Proprietary, unknown.
the major version number of core that plugin was compiled for
the minor version number of core that plugin was compiled for
a unique name of the plugin
description of plugin
pointer to the init function of this plugin.
version of the plugin
effective license of plugin
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
date time string in ISO 8601
format (or rather, a subset thereof), or <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS">NULL</a>. Allowed are the
following formats: "YYYY-MM-DD" and "YYY-MM-DDTHH:MMZ" (with
'T' a separator and 'Z' indicating UTC/Zulu time). This field
should be set via the GST_PACKAGE_RELEASE_DATETIME
preprocessor macro.
A plugin should export a variable of this type called plugin_desc. The plugin
loader will use the data provided there to initialize the plugin.
The <em>licence</em> parameter must be one of: LGPL, GPL, QPL, GPL/QPL, MPL,
BSD, MIT/X11, Proprietary, unknown.
the major version number of core that plugin was compiled for
the minor version number of core that plugin was compiled for
a unique name of the plugin
description of plugin
pointer to the init function of this plugin.
version of the plugin
effective license of plugin
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
date time string in ISO 8601
format (or rather, a subset thereof), or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null">null</a>. Allowed are the
following formats: "YYYY-MM-DD" and "YYY-MM-DDTHH:MMZ" (with
'T' a separator and 'Z' indicating UTC/Zulu time). This field
should be set via the GST_PACKAGE_RELEASE_DATETIME
preprocessor macro.
A plugin should export a variable of this type called plugin_desc. The plugin
loader will use the data provided there to initialize the plugin.
The <em>licence</em> parameter must be one of: LGPL, GPL, QPL, GPL/QPL, MPL,
BSD, MIT/X11, Proprietary, unknown.
the major version number of core that plugin was compiled for
the minor version number of core that plugin was compiled for
a unique name of the plugin
description of plugin
pointer to the init function of this plugin.
version of the plugin
effective license of plugin
source module plugin belongs to
shipped package plugin belongs to
URL to provider of plugin
date time string in ISO 8601
format (or rather, a subset thereof), or <a href="https://docs.python.org/3/library/constants.html#None">None</a>. Allowed are the
following formats: "YYYY-MM-DD" and "YYY-MM-DDTHH:MMZ" (with
'T' a separator and 'Z' indicating UTC/Zulu time). This field
should be set via the GST_PACKAGE_RELEASE_DATETIME
preprocessor macro.
Get the error quark.
The error quark used in GError messages
Get the error quark.
The error quark used in GError messages
Get the error quark.
The error quark used in GError messages
This macro needs to be used to define the entry point and meta data of a
plugin. One would use this macro to export a plugin, so that it can be used
by other applications.
The macro uses a define named PACKAGE for the <a href="gstreamer/gstplugin.html#GstPluginDesc">GstPluginDesc</a>,source field.
When using autoconf, this is usually set automatically via the AC_INIT
macro, and set in config.h. If you are not using autoconf, you will need to
define PACKAGE yourself and set it to a short mnemonic string identifying
your application/package, e.g. 'someapp' or 'my-plugins-foo.
If defined, the GST_PACKAGE_RELEASE_DATETIME will also be used for the
<a href="gstreamer/gstplugin.html#GstPluginDesc">GstPluginDesc</a>,release_datetime field.
<b>Parameters:</b>
major version number of the gstreamer-core that plugin was compiled for
minor version number of the gstreamer-core that plugin was compiled for
short, but unique name of the plugin
information about the purpose of the plugin
function pointer to the plugin_init method with the signature of <code>static gboolean plugin_init (GstPlugin * plugin)</code>.
full version string (e.g. VERSION from config.h)
under which licence the package has been released, e.g. GPL, LGPL.
the package-name (e.g. PACKAGE_NAME from config.h)
a description from where the package comes from (e.g. the homepage URL)
This macro can be used to initialize statically linked plugins. It is
necessary to call this macro before the plugin can be used.
It has to be used in combination with GST_PLUGIN_STATIC_REGISTER
and must be placed outside any block to declare the plugin initialization
function.
<b>Parameters:</b>
short, but unique name of the plugin

	<b>Since</b>			: 1.2
		
This macro can be used to initialize statically linked plugins. It is
necessary to call this macro before the plugin can be used.
It has to be used in combination with GST_PLUGIN_STATIC_DECLARE and
calls the plugin initialization function.
<b>Parameters:</b>
short, but unique name of the plugin

	<b>Since</b>			: 1.2
		
Flags used in connection with <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">gst_plugin_add_dependency</a>.
no special flags
recurse into subdirectories
use paths
argument only if none of the environment variables is set
interpret
filename argument as filter suffix and check all matching files in
the directory
interpret
filename argument as filter prefix and check all matching files in
the directory. Since: 1.8.
interpret
non-absolute paths as relative to the main executable directory. Since
1.14.
Flags used in connection with <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">Gst.Plugin.prototype.add_dependency</a>.
no special flags
recurse into subdirectories
use paths
argument only if none of the environment variables is set
interpret
filename argument as filter suffix and check all matching files in
the directory
interpret
filename argument as filter prefix and check all matching files in
the directory. Since: 1.8.
interpret
non-absolute paths as relative to the main executable directory. Since
1.14.
Flags used in connection with <a href="gstreamer/gstplugin.html#gst_plugin_add_dependency">Gst.Plugin.add_dependency</a>.
no special flags
recurse into subdirectories
use paths
argument only if none of the environment variables is set
interpret
filename argument as filter suffix and check all matching files in
the directory
interpret
filename argument as filter prefix and check all matching files in
the directory. Since: 1.8.
interpret
non-absolute paths as relative to the main executable directory. Since
1.14.
The plugin loading errors
The plugin could not be loaded
The plugin has unresolved dependencies
The plugin has already be loaded from a different file
The plugin loading errors
The plugin could not be loaded
The plugin has unresolved dependencies
The plugin has already be loaded from a different file
The plugin loading errors
The plugin could not be loaded
The plugin has unresolved dependencies
The plugin has already be loaded from a different file
The plugin loading state
Temporarily loaded plugins
The plugin won't be scanned (again)
The plugin loading state
Temporarily loaded plugins
The plugin won't be scanned (again)
The plugin loading state
Temporarily loaded plugins
The plugin won't be scanned (again)
To be used in GST_PLUGIN_DEFINE if unsure about the licence.
To be used in GST_PLUGIN_DEFINE if unsure about the licence.
To be used in GST_PLUGIN_DEFINE if unsure about the licence.
The error message category quark
A function that can be used with e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">gst_registry_plugin_filter</a>
to get a list of plugins that match certain criteria.
<b>Parameters:</b>
the plugin to check
the user_data that has been passed on e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">gst_registry_plugin_filter</a>
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> for a positive match, <a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</a> otherwise
A function that can be used with e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">Gst.Registry.prototype.plugin_filter</a>
to get a list of plugins that match certain criteria.
<b>Parameters:</b>
the plugin to check
the user_data that has been passed on e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">Gst.Registry.prototype.plugin_filter</a>
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> for a positive match, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">false</a> otherwise
A function that can be used with e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">Gst.Registry.plugin_filter</a>
to get a list of plugins that match certain criteria.
<b>Parameters:</b>
the plugin to check
the user_data that has been passed on e.g. <a href="gstreamer/gstregistry.html#gst_registry_plugin_filter">Gst.Registry.plugin_filter</a>
<a href="https://docs.python.org/3/library/constants.html#True">True</a> for a positive match, <a href="https://docs.python.org/3/library/constants.html#False">False</a> otherwise
A plugin should provide a pointer to a function of either <a href="gstreamer/gstplugin.html#GstPluginInitFunc">GstPluginInitFunc</a>
or this type in the plugin_desc struct.
The function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">GstPluginFeature</a>. This version allows
user data to be passed to init function (useful for bindings).
<b>Parameters:</b>
The plugin object
extra data
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> if plugin initialised successfully
A plugin should provide a pointer to a function of either <a href="gstreamer/gstplugin.html#GstPluginInitFunc">Gst.PluginInitFunc</a>
or this type in the plugin_desc struct.
The function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">Gst.PluginFeature</a>. This version allows
user data to be passed to init function (useful for bindings).
<b>Parameters:</b>
The plugin object
extra data
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> if plugin initialised successfully
A plugin should provide a pointer to a function of either <a href="gstreamer/gstplugin.html#GstPluginInitFunc">Gst.PluginInitFunc</a>
or this type in the plugin_desc struct.
The function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">Gst.PluginFeature</a>. This version allows
user data to be passed to init function (useful for bindings).
<b>Parameters:</b>
The plugin object
extra data
<a href="https://docs.python.org/3/library/constants.html#True">True</a> if plugin initialised successfully
A plugin should provide a pointer to a function of this type in the
plugin_desc struct.
This function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">GstPluginFeature</a>.
<b>Parameters:</b>
The plugin object
<a href="https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</a> if plugin initialised successfully
A plugin should provide a pointer to a function of this type in the
plugin_desc struct.
This function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">Gst.PluginFeature</a>.
<b>Parameters:</b>
The plugin object
<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">true</a> if plugin initialised successfully
A plugin should provide a pointer to a function of this type in the
plugin_desc struct.
This function will be called by the loader at startup. One would then
register each <a href="gstreamer/gstpluginfeature.html#GstPluginFeature">Gst.PluginFeature</a>.
<b>Parameters:</b>
The plugin object
<a href="https://docs.python.org/3/library/constants.html#True">True</a> if plugin initialised successfully
The results of the search are
-----
